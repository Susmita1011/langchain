# Pydantic Output Parser -> Allows schema validation as well for the output generated by the LLM, Allows strict schema enforcement, auto type casting as required(type Safety)
from langchain_google_genai import ChatGoogleGenerativeAI
from dotenv import load_dotenv
from langchain_core.output_parsers import PydanticOutputParser
from pydantic import BaseModel,Field
from langchain.prompts import PromptTemplate
load_dotenv()

#Defining the model for the Pydantic Data processing
model= ChatGoogleGenerativeAI(model="gemini-2.0-flash")

#Defining a pydantic Object which will enforce schema
class people(BaseModel):
    name: str=Field(description="Name of a person")
    age: int = Field(gt=18,description="Age of the person")
    city: str = Field(description="Name of the City from where the person belongs to")

#Defining the Pydantic Output Parser:
parser = PydanticOutputParser(pydantic_object=people)

template = PromptTemplate(template="Generate the name,age and city of a fictional {place} person \n {format_instructions}",input_variables=["place"],partial_variables={'format_instructions':parser.get_format_instructions()})

chain = template | model |parser
result = chain.invoke({'place':'American'})
print(result)
